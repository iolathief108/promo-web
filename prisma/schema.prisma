generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String

  @@map("documents")
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String? @map("first_name")
  lastName  String? @map("last_name")
  phone     String  @unique @map("phone")
  orders    Order[]
}

model Image {
  id         Int        @id @default(autoincrement())
  data       Bytes
  products   Product[]
  categories Category[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  imageId  Int?      @map("image_id")
  image    Image?    @relation(fields: [imageId], references: [id])
  slug     String
  products Product[]
}

model Product {
  id Int @id @default(autoincrement())

  enabled Boolean
  name    String

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  imageId    Int      @map("image_id")
  image      Image    @relation(fields: [imageId], references: [id])

  variant1Name    String?      @map("variant_1_name")
  variant1Price   Float?         @map("variant_1_price")
  variant1InStock Boolean?     @map("variant_1_in_stock")
  variant1Qty     Int?        @map("variant_1_qty")

  variant2Name    String?      @map("variant_2_name")
  variant2Price   Float?         @map("variant_2_price")
  variant2InStock Boolean?     @map("variant_2_in_stock")
  variant2Qty     Int?        @map("variant_2_qty")

  description     String?      @map("description")

  createdAt       DateTime    @default(now()) @map("created_at")
  orderItems      OrderItem[]
}

model Order {
  id        Int    @id @default(autoincrement())
  firstName String @map("first_name")
  lastName  String @map("last_name")
  phone     String @map("phone")
  email     String @map("email")

  addressLine1 String  @map("address_line_1")
  addressLine2 String? @map("address_line_2")
  city         String  @map("city")
  state        String? @map("state")
  zip          String? @map("zip")


  userId Int
  user   User        @relation(fields: [userId], references: [id])
  items  OrderItem[]
  metas  OrderMeta[]

  deliveryFee Float @map("delivery_fee")
  createdAt   DateTime @default(now()) @map("created_at")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  productId Int?     @map("product_id")
  product   Product? @relation(fields: [productId], references: [id])
  orderId   Int      @map("order_id")
  order     Order    @relation(fields: [orderId], references: [id])

  name          String
  variant1Name  String @map("variant_1_name")
  variant1Price Float    @map("variant_1_price")
  variant1Qty   Int    @map("variant_1_qty")
  variant2Name  String @map("variant_2_name")
  variant2Price Float    @map("variant_2_price")
  variant2Qty   Int    @map("variant_2_qty")

  @@unique([productId, orderId])
}

model OrderMeta {
  id      Int    @id @default(autoincrement())
  orderId Int    @map("order_id")
  order   Order  @relation(fields: [orderId], references: [id])
  key     String
  value   String

  @@unique([orderId, key])
}
